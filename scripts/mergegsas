#!/usr/bin/env python
import argparse
import re

__version__="0.1.0"

class InputFile:
    def __init__(self, filename):
        handle = file(filename)
        self.__filename = filename
        self.__header = []
        self.__bankinfo = ""
        self.__data = []
        in_data=False
        for line in handle.readlines():
            if line.startswith('BANK'):
                in_data = True
                self.__bankinfo = line

            else:
                if in_data:
                    self.__data.append(line)
                else:
                    self.__header.append(line)
        handle.close()

    def renumber(self, banknum):
        match = re.findall(r'BANK\s+\d+', self.__bankinfo)[0]
        replacement = "%s %d" % (match.split()[0], banknum)
        self.__bankinfo = self.__bankinfo.replace(match, replacement)

    def write(self, handle, isFirst):
        for line in self.__header:
            if (not line.startswith('#')) and (not isFirst):
                line = '# ' + line
            handle.write(line)
        handle.write(self.__bankinfo)
        handle.write(''.join(self.__data))

    def __repr__(self):
        return "InputFile(%s): %s" % (self.__filename, self.__bankinfo)

    def __cmp__(self, other):
        if self.__bankinfo == other.__bankinfo:
            return 0
        elif self.__bankinfo < other.__bankinfo:
            return -1
        else:
            return 1

def mergegsas(filenames, output):
    handles = [InputFile(filename) for filename in filenames]
    handles.sort()

    if isinstance(output, list):
        output=output[0]

    outfile = file(output, 'w')
    for (i, item) in enumerate(handles):
        item.renumber(i+1)
        item.write(outfile, i==0)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Program to merge gsas files")
    parser.add_argument("-o", "--output", nargs=1, default="merged.getn")
    parser.add_argument("filenames", metavar="FILENAME", nargs="+",
                        help="name of input file")

    args= parser.parse_args()

    if len(args.filenames) <= 1:
        parser.exit("Need to supply more than one file to merge")

    mergegsas(args.filenames, args.output)
